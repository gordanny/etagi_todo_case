{"version":3,"sources":["components/CreateTaskForm.js","components/Tasks.js","components/ToDo.js","components/LoginForm.js","components/Authentication.js","App.js","reportWebVitals.js","index.js"],"names":["CreateTaskForm","props","handleFormattedDate","date","Date","String","getFullYear","getMonth","padStart","getDate","join","handleInputChange","e","name","target","value","setState","prevstate","newState","handleResponsibleAdd","preventDefault","newList","state","responsibleList","slice","item","id","view","form","responsible","push","handleResponsibleSelect","listItems","map","userList","fullName","username","responsibleSelect","onChange","onClick","title","description","expiration_date","priority","status","creator","userID","concat","responsibleSelectField","this","onSubmit","handleCreateTask","htmlFor","type","React","Component","Tasks","handleShowForm","data","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","then","res","json","console","log","handleResposible","list","forEach","handleCreateTasksList","anyTasksList","taskList","task","priorityDict","statusDict","handleShowMyTasks","today","week","setDate","todayTasks","weekTasks","longTasks","tasksList","expDate","includes","todayTasksList","weekTasksList","longTasksList","handleShowMyTeamTasks","myTeamTasksList","length","handleShowTasksByResponsible","tasksDict","tasksByResponsible","respTasks","handleShowAllTasks","refresh","lst","tasksView","ToDo","handleLogout","removeItem","onLoggedInChange","handleUserCheck","handleViewChange","createTask","element","Object","assign","firstName","first_name","toUpperCase","patronymic","init","last_name","showFormButton","tasks","LoginForm","password","handleLogin","Authentication","verifyAuthenticationJSON","token","setItem","loginError","non_field_errors","error","App","handleLoggedInChange","isLoggedIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAsIeA,E,kDAlIb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAmBRC,oBAAsB,WACpB,IAAMC,EAAO,IAAIC,KAKjB,MADsB,CAHTC,OAAOF,EAAKG,eACXD,OAAOF,EAAKI,WAAa,GAAGC,SAAS,EAAG,GAC1CH,OAAOF,EAAKM,WAAWD,SAAS,EAAG,IACRE,KAAK,MAzB3B,EA6BnBC,kBAAoB,SAAAC,GAClB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MAEvB,EAAKC,UAAS,SAAAC,GACZ,IAAMC,EAAQ,eAAOD,GAMrB,MALa,sBAATJ,EACFK,EAASL,GAAQE,EAEjBG,EAAQ,KAAOL,GAAQE,EAElBG,MAxCQ,EA4CnBC,qBAAuB,SAAAP,GACrBA,EAAEQ,iBACF,IAF0B,EAEpBL,EAAQH,EAAEE,OAAOC,MACjBM,EAAU,EAAKC,MAAMC,gBAAgBC,QAHjB,cAITH,GAJS,IAI1B,2BAA0B,CAAC,IAAlBI,EAAiB,QACxB,GAAIA,EAAKC,IAAMD,EAAKC,MAAQX,EAAO,CACjCU,EAAKE,MAAO,EACZ,EAAKL,MAAMM,KAAKC,YAAYC,KAAKf,GACjC,MAEJ,EAAKC,SAAS,CAACO,gBAAiBF,KAVN,gCA5CT,EA0DnBU,wBAA0B,WACxB,IAAIC,EAAY,EAAKV,MAAMC,gBAAgBU,KAAI,SAAAR,GAE3C,IAAIZ,EADN,OAAIY,EAAKE,MAGLd,EADC,EAAKZ,MAAMiC,SAAST,EAAKC,IACnB,EAAKzB,MAAMiC,SAAST,EAAKC,IAAIS,SAE7BV,EAAKW,SAEP,wBAAsBrB,MAAOU,EAAKC,GAAlC,SAAuCb,GAA1BY,EAAKC,KAElB,QAGX,OACE,gCACE,wBACEb,KAAK,oBACLE,MAAO,EAAKO,MAAMe,kBAClBC,SAAU,EAAK3B,kBAHjB,SAKGqB,IAEH,wBAAQjB,MAAO,EAAKO,MAAMe,kBAAmBE,QAAS,EAAKpB,qBAA3D,8DAAkG,2BA/EtG,EAAKG,MAAQ,CACTM,KAAM,CACNY,MAAO,GACPC,YAAa,GACbC,gBAAiB,EAAKxC,sBACtByC,SAAU,KACVC,OAAQ,KACRC,QAAS,EAAK5C,MAAM6C,OACpBjB,YAAa,IAEbN,gBAAiB,CACf,CAACG,GAAI,EAAGU,SAAU,6CAAWT,MAAM,GACnC,CAACD,GAAI,EAAKzB,MAAM6C,OAAQV,SAAU,EAAKnC,MAAMmC,SAAUT,MAAM,IAC7DoB,OAAO,EAAK9C,MAAMsB,iBACpBc,kBAAmB,GAhBN,E,0CAsFnB,WAAU,IAAD,OACDW,EAAyBC,KAAKlB,0BACpC,OACE,uBAAMmB,SAAU,SAAAtC,GAAC,OAAI,EAAKX,MAAMkD,iBAAiBvC,EAAG,EAAKU,MAAMM,OAA/D,UACE,qGACA,uBAAOwB,QAAQ,QAAf,oEACA,uBACEC,KAAK,OACLxC,KAAK,QACLE,MAAOkC,KAAK3B,MAAMM,KAAKY,MACvBF,SAAUW,KAAKtC,oBAEjB,uBAAOyC,QAAQ,cAAf,8DACA,uBACEC,KAAK,OACLxC,KAAK,cACLE,MAAOkC,KAAK3B,MAAMM,KAAKa,YACvBH,SAAUW,KAAKtC,oBAEjB,uBAAOyC,QAAQ,kBAAf,6FACA,uBACEC,KAAK,OACLxC,KAAK,kBACLE,MAAOkC,KAAK3B,MAAMM,KAAKc,gBACvBJ,SAAUW,KAAKtC,oBAEjB,uBAAOyC,QAAQ,WAAf,oEAA2C,uBAC3C,yBACEvC,KAAK,WACLE,MAAOkC,KAAK3B,MAAMM,KAAKe,SACvBL,SAAUW,KAAKtC,kBAHjB,UAKE,wBAAQI,MAAM,KAAd,kDACA,wBAAQA,MAAM,KAAd,wDACA,wBAAQA,MAAM,KAAd,2DACO,uBACT,uBAAOqC,QAAQ,cAAf,4FAAkD,uBACjDJ,EACD,uBAAOK,KAAK,kB,GA7HSC,IAAMC,WC0PpBC,E,kDAxPX,WAAYvD,GAAQ,IAAD,qCACf,cAAMA,IAkDVwD,eAAiB,WACb,OAAO,cAAC,EAAD,CACHrB,SAAU,EAAKd,MAAMc,SACrBU,OAAQ,EAAKxB,MAAMwB,OACnBK,iBAAkB,EAAKA,iBACvB5B,gBAAiB,EAAKD,MAAMC,gBAC5BW,SAAU,EAAKjC,MAAMiC,YAzDV,EA6DnBiB,iBAAmB,SAACvC,EAAG8C,GACnB9C,EAAEQ,iBACFuC,MAAM,oBAAqB,CACvBC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChBC,cAAc,OAAD,OAASC,aAAaC,QAAQ,WAE/CC,KAAMC,KAAKC,UAAUT,KAEpBU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAIC,QAAQC,IAAIF,OAxEf,EA2EnBpE,oBAAsB,WAClB,IAAMC,EAAO,IAAIC,KAKjB,MADsB,CAHTC,OAAOF,EAAKG,eACXD,OAAOF,EAAKI,WAAa,GAAGC,SAAS,EAAG,GAC1CH,OAAOF,EAAKM,WAAWD,SAAS,EAAG,IACRE,KAAK,MAhF7B,EAoFnB+D,iBAAmB,SAACxE,GAChB,IACIY,EADAU,EAAkB,GAUtB,OARAtB,EAAMyE,KAAKC,SAAQ,SAAA9C,GAEXhB,EADA,EAAKZ,MAAMiC,SAASL,GACb,EAAK5B,MAAMiC,SAASL,GAAaM,SAEjCN,EAEXN,EAAgBO,KAAK,iCAAyBjB,EAAzB,MAAWgB,OAGhC,8BAAMN,KAhGK,EAoGnBqD,sBAAwB,SAAAC,GACpB,IAAIC,EAAWD,EAAa5C,KAAI,SAAA8C,GAAI,OAChC,sBAAmBrD,GAAIqD,EAAKrD,GAA5B,UACI,8BAAMqD,EAAKvC,QACX,8BAAM,EAAKwC,aAAaD,EAAKpC,YAC7B,8BAAMoC,EAAKrC,kBACX,cAAC,EAAK+B,iBAAN,CAAuBC,KAAMK,EAAKlD,cAClC,8BAAM,EAAKoD,WAAWF,EAAKnC,UAC3B,yBANMmC,EAAKrD,OASnB,OACI,8BAAMoD,KAhHK,EAoHnBI,kBAAoB,WAChB,IAAIC,EAAQ,EAAKjF,sBACbkF,EAAO,IAAIhF,KACfgF,EAAKC,QAAQD,EAAK3E,UAAY,GAC9B,IAAI6E,EAAa,GACbC,EAAY,GACZC,EAAY,GAChB,EAAKlE,MAAMmE,UAAUd,SAAQ,SAAAI,GACzB,IAAIW,EAAU,IAAItF,KAAK2E,EAAKrC,iBACxBqC,EAAKlD,YAAY8D,SAAS,EAAKrE,MAAMwB,UACjCiC,EAAKrC,kBAAoByC,EACzBG,EAAWxD,KAAKiD,GACTW,GAAWN,EAClBG,EAAUzD,KAAKiD,GAEfS,EAAU1D,KAAKiD,OAK3B,IAAMa,EAAiB,EAAKhB,sBAAsBU,GAC5CO,EAAgB,EAAKjB,sBAAsBW,GAC3CO,EAAgB,EAAKlB,sBAAsBY,GAEjD,OACI,gCACI,yCACCI,EAAe,uBAChB,wCACCC,EAAc,uBACf,yCACCC,EAAc,2BAnJR,EAwJnBC,sBAAwB,WACpB,IACIC,EADAlB,EAAW,GAoBf,OAlBI,EAAKxD,MAAMC,gBAAgB0E,QAC3B,EAAK3E,MAAMmE,UAAUd,SAAQ,SAAAI,GAAS,IAAD,gBACT,EAAKzD,MAAMC,iBADF,IACjC,2BAAoD,CAAC,IAA5CM,EAA2C,QAChD,GAAIkD,EAAKlD,YAAY8D,SAAS9D,EAAYH,IAAK,CAC3CoD,EAAShD,KAAKiD,GACd,QAJyB,kCASjCiB,EADAlB,EAASmB,OACS,EAAKrB,sBAAsBE,GAE3B,2OAGtBkB,EAAkB,oJAIlB,8BACKA,KA/KM,EAoLnBE,6BAA+B,WAC3B,IAAIC,EAAY,GAChB,EAAK7E,MAAMmE,UAAUd,SAAQ,SAAAI,GACzBA,EAAKlD,YAAY8C,SAAQ,SAAA9C,GACfA,KAAesE,IACjBA,EAAUtE,GAAe,IAE7BsE,EAAUtE,GAAaC,KAAKiD,SAIpC,IAAIqB,EAAqB,GACzB,IAAK,IAAIvE,KAAesE,EAAW,CAC/B,IAAIE,EAAY,EAAKzB,sBAAsBuB,EAAUtE,IACrDuE,EAAmBtE,KACf,sBAAuBJ,GAAIG,EAA3B,UACI,wEAAaA,KACb,8BAAMwE,MAFAxE,IAMlB,OACI,8BACKuE,KA3MM,EAgNnBE,mBAAqB,WACjB,IAAIxB,EAAW,EAAKF,sBAAsB,EAAKtD,MAAMmE,WACrD,OACI,8BACKX,KAlNT,EAAKxD,MAAQ,CACTmE,UAAW,GACX9D,KAAM,EAAK1B,MAAM0B,KACjBS,SAAU,EAAKnC,MAAMmC,SACrBU,OAAQ,EAAK7C,MAAM6C,OACnBvB,gBAAiB,GACjBgF,SAAS,GAEb,EAAKtB,WAAa,CACd,GAAM,sEACN,GAAM,qEACN,GAAM,yDACN,GAAM,oDAEV,EAAKD,aAAe,CAChB,GAAM,uCACN,GAAM,6CACN,GAAM,8CAnBK,E,qDAuBnB,WAAqB,IAAD,OAChBT,QAAQC,IAAI,UACZb,MAAM,iBAAkB,CACpBE,QAAS,CACLC,cAAc,OAAD,OAASC,aAAaC,QAAQ,aAG9CI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACFC,QAAQC,IAAIF,GACZ,EAAKtD,SAAS,CAACyE,UAAWnB,OAElCX,MAAM,yBAA0B,CAC5BE,QAAS,CACLC,cAAc,OAAD,OAASC,aAAaC,QAAQ,aAG9CI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACF,GAAIA,EAAK2B,OAAQ,CACjB,IAAMO,EAAMlC,EAAKrC,KAAI,SAAAR,GACjB,MAAO,CAACC,GAAID,EAAKC,GAAIU,SAAUX,EAAKW,SAAUT,MAAM,MAExD,EAAKX,SAAS,CAACO,gBAAiBiF,U,oBA2K5C,WACI,IAAIC,EACJ,OAAQxD,KAAKhD,MAAM0B,MACf,IAAK,KACD8E,EAAYxD,KAAKiC,oBACjB,MACJ,IAAK,SACDuB,EAAYxD,KAAK8C,wBACjB,MACJ,IAAK,MACDU,EAAYxD,KAAKqD,qBACjB,MACJ,IAAK,mBACDG,EAAYxD,KAAKiD,+BACjB,MACJ,IAAK,aACDO,EAAYxD,KAAKQ,iBACjB,MACJ,QACIgD,EAAY,KAEpB,OACI,gCACI,sCAAY,uBACZ,8BAAMA,W,GAlPFnD,IAAMC,WC8FXmD,E,kDA7FX,WAAYzG,GAAQ,IAAD,8BACf,cAAMA,IA2CV0G,aAAe,WACX5C,aAAa6C,WAAW,SACxB,EAAK3G,MAAM4G,kBAAiB,IA9Cb,EAiDnBC,gBAAkB,WACd,OAAO,EAAKxF,MAAMc,UAAY,EAAKd,MAAMwB,QAlD1B,EAqDnBiE,iBAAmB,SAACnG,GAChBA,EAAEQ,iBACF,EAAKJ,SAAS,CAACW,KAAMf,EAAEE,OAAOC,SArD9B,EAAKO,MAAQ,CACTc,SAAU,GACVU,OAAQ,GACRnB,KAAM,MACNqF,YAAY,GAEhB,EAAK9E,SAAW,GARD,E,qDAWnB,WAAqB,IAAD,OAChByB,MAAM,qBAAsB,CAC5BE,QAAS,CACLC,cAAc,OAAD,OAASC,aAAaC,QAAQ,aAG9CI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACF,EAAKtD,SAAS,CAAEoB,SAAUkC,EAAKlC,WAC/B,EAAKpB,SAAS,CAAE8B,OAAQwB,EAAK5C,QAEjCiC,MAAM,qBAAsB,CACxBE,QAAS,CACLC,cAAc,OAAD,OAASC,aAAaC,QAAQ,aAG9CI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACEA,EAAK2B,QACL3B,EAAKK,SAAQ,SAAAsC,GACT,EAAK/E,SAAS+E,EAAQvF,IAAM,GAC5BwF,OAAOC,OAAO,EAAKjF,SAAS+E,EAAQvF,IAAKuF,UAClC,EAAK/E,SAAS+E,EAAQvF,IAAIA,GACjC,IAAI0F,EAAYH,EAAQI,WAAaJ,EAAQI,WAAW7F,MAAM,EAAE,GAAG8F,cAAgB,IAAM,GACrFC,EAAaN,EAAQM,WAAaN,EAAQM,WAAW/F,MAAM,EAAE,GAAG8F,cAAgB,IAAM,GACtFE,EAAOJ,EAAY,IAAMA,EAAYG,EAAa,GAClDpF,EAAW8E,EAAQQ,UAAYD,EACnC,EAAKtF,SAAS+E,EAAQvF,IAAIS,SAAWA,GAAsB8E,EAAQ7E,iB,oBAoBvF,WAAU,IACFsF,EACAC,EAFC,OAeL,OAZI1E,KAAK6D,mBACLY,EAAiB,wBAAQ3G,MAAM,aAAawB,QAAS,SAAA3B,GAAC,OAAI,EAAKmG,iBAAiBnG,IAA/D,wDACjB+G,EAAQ,cAAC,EAAD,CACJvF,SAAUa,KAAK3B,MAAMc,SACrBU,OAAQG,KAAK3B,MAAMwB,OACnBnB,KAAMsB,KAAK3B,MAAMK,KACjBO,SAAUe,KAAKf,aAGnBwF,GAAiB,EACjBC,GAAQ,GAGR,gCACI,gCACI,+BAAO1E,KAAK3B,MAAMc,WAClB,wBAAQG,QAASU,KAAK0D,aAAtB,oBACA,gCACI,wBAAQ5F,MAAM,KAAKwB,QAAS,SAAA3B,GAAC,OAAI,EAAKmG,iBAAiBnG,IAAvD,qEACA,wBAAQG,MAAM,SAASwB,QAAS,SAAA3B,GAAC,OAAI,EAAKmG,iBAAiBnG,IAA3D,sHACA,wBAAQG,MAAM,MAAMwB,QAAS,SAAA3B,GAAC,OAAI,EAAKmG,iBAAiBnG,IAAxD,qEACA,wBAAQG,MAAM,mBAAmBwB,QAAS,SAAA3B,GAAC,OAAI,EAAKmG,iBAAiBnG,IAArE,wIACC8G,QAGT,uBACCC,S,GAxFErE,IAAMC,WC0CVqE,E,kDA1Cb,WAAY3H,GAAQ,IAAD,8BACjB,cAAMA,IAORU,kBAAoB,SAAAC,GAClB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MACvB,EAAKC,UAAS,SAAAC,GACZ,IAAMC,EAAQ,eAAQD,GAEtB,OADAC,EAASL,GAAQE,EACVG,MAZT,EAAKI,MAAQ,CACXc,SAAU,GACVyF,SAAU,IAJK,E,0CAkBnB,WAAU,IAAD,OACP,OACE,uBAAM3E,SAAU,SAAAtC,GAAC,OAAI,EAAKX,MAAM6H,YAAYlH,EAAG,EAAKU,QAApD,UACE,wCACA,uBAAO8B,QAAQ,WAAf,sBACA,uBACEC,KAAK,OACLxC,KAAK,WACLE,MAAOkC,KAAK3B,MAAMc,SAClBE,SAAUW,KAAKtC,oBAEjB,uBAAOyC,QAAQ,WAAf,sBACA,uBACEC,KAAK,WACLxC,KAAK,WACLE,MAAOkC,KAAK3B,MAAMuG,SAClBvF,SAAUW,KAAKtC,oBAEjB,uBAAO0C,KAAK,kB,GArCIC,IAAMC,WCoDfwE,E,kDAlDX,WAAY9H,GAAQ,IAAD,8BACf,cAAMA,IAMV+H,yBAA2B,SAAA1D,GACnBA,EAAK2D,OACLlE,aAAamE,QAAQ,QAAS5D,EAAK2D,OACnC,EAAKhI,MAAM4G,kBAAiB,IAE5B,EAAK7F,SAAS,CAACmH,WAAY7D,EAAK8D,oBAZrB,EAgBnBN,YAAc,SAAClH,EAAG8C,GAEd,GADA9C,EAAEQ,iBACEsC,EAAKtB,UAAYsB,EAAKmE,SACtBlE,MAAM,eAAgB,CAClBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBI,KAAMC,KAAKC,UAAUT,KAEpBU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAI,EAAK0D,yBAAyB1D,UAC7C,CACH,IAAM+D,EAAQ3E,EAAKtB,SAAW,iBAAmB,iBACjD,EAAKpB,SAAS,CAACmH,WAAYE,MA5B/B,EAAK/G,MAAQ,CACT6G,WAAY,MAHD,E,0CAkCnB,WAOI,OACI,gCACI,+BARU,CACd,iBAAoB,sOACpB,iBAAoB,wFACpB,eAAkB,wMAClB,eAAkB,kJAIGlF,KAAK3B,MAAM6G,cAC5B,cAAC,EAAD,CAAWL,YAAa7E,KAAK6E,qB,GA7ChBxE,IAAMC,WC0BpB+E,G,wDAxBb,WAAYrI,GAAQ,IAAD,8BACjB,cAAMA,IAMRsI,qBAAuB,SAAAC,GACrB,EAAKxH,SAAS,CAACwH,WAAYA,KAN3B,EAAKlH,MAAQ,CACXkH,aAAYzE,aAAaC,QAAQ,UAHlB,E,0CAWnB,WAOE,OALIf,KAAK3B,MAAMkH,WACN,cAAC,EAAD,CAAM3B,iBAAkB5D,KAAKsF,uBAE7B,cAAC,EAAD,CAAgB1B,iBAAkB5D,KAAKsF,2B,GAjBlCjF,IAAMC,YCOTkF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvE,MAAK,YAAkD,IAA/CwE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2fc2d5cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CreateTaskForm extends React.Component {\r\n  constructor(props) {\r\n    super(props); \r\n    this.state = {\r\n        form: {\r\n        title: '',\r\n        description: '',\r\n        expiration_date: this.handleFormattedDate(),\r\n        priority: 'LW',\r\n        status: 'TW',\r\n        creator: this.props.userID,\r\n        responsible: []\r\n        },\r\n        responsibleList: [\r\n          {id: 0, username: 'Выбрать', view: true},\r\n          {id: this.props.userID, username: this.props.username, view: true}\r\n        ].concat(this.props.responsibleList),\r\n        responsibleSelect: 0\r\n    };\r\n  }\r\n\r\n  handleFormattedDate = () => {\r\n    const date = new Date();\r\n    const year = String(date.getFullYear());\r\n    const month = String(date.getMonth() + 1).padStart(2, 0);\r\n    const day = String(date.getDate()).padStart(2, 0);\r\n    const formattedDate = [year,month,day].join('-');\r\n    return formattedDate;\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    const form = \"form\";\r\n    this.setState(prevstate => {\r\n      const newState = {...prevstate};\r\n      if (name === \"responsibleSelect\") {\r\n        newState[name] = value; \r\n      } else {        \r\n        newState[form][name] = value;\r\n      };\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  handleResponsibleAdd = e => {\r\n    e.preventDefault();\r\n    const value = e.target.value;\r\n    const newList = this.state.responsibleList.slice();\r\n    for (let item of newList) {\r\n      if (item.id && item.id === +value) {\r\n        item.view = false;        \r\n        this.state.form.responsible.push(value);\r\n        break;\r\n      };\r\n    this.setState({responsibleList: newList});\r\n    };\r\n  };\r\n\r\n  handleResponsibleSelect = () => {\r\n    let listItems = this.state.responsibleList.map(item => {\r\n      if (item.view) {\r\n        let name;\r\n        if(this.props.userList[item.id]){\r\n          name = this.props.userList[item.id].fullName;\r\n        } else {\r\n          name = item.username;\r\n        };\r\n        return <option key={item.id} value={item.id}>{name}</option>;        \r\n      } else {\r\n        return null;\r\n      };\r\n    });\r\n    return (\r\n      <div>  \r\n        <select\r\n          name=\"responsibleSelect\"\r\n          value={this.state.responsibleSelect}\r\n          onChange={this.handleInputChange}\r\n        >\r\n          {listItems}\r\n        </select>\r\n        <button value={this.state.responsibleSelect} onClick={this.handleResponsibleAdd}>Добавить</button><br />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const responsibleSelectField = this.handleResponsibleSelect();\r\n    return (\r\n      <form onSubmit={e => this.props.handleCreateTask(e, this.state.form)}>\r\n        <h4>Новая задача</h4>\r\n        <label htmlFor=\"title\">Заголовок</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={this.state.form.title}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <label htmlFor=\"description\">Описание</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          value={this.state.form.description}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <label htmlFor=\"expiration_date\">Дата окончания</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"expiration_date\"\r\n          value={this.state.form.expiration_date}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <label htmlFor=\"priority\">Приоритет</label><br />\r\n        <select\r\n          name=\"priority\"\r\n          value={this.state.form.priority}\r\n          onChange={this.handleInputChange}\r\n        >\r\n          <option value=\"LW\">Низкий</option>\r\n          <option value=\"MD\">Средний</option>\r\n          <option value=\"HI\">Высокий</option>\r\n        </select><br />\r\n        <label htmlFor=\"responsible\">Ответственные</label><br />\r\n        {responsibleSelectField}\r\n        <input type=\"submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTaskForm;\r\n\r\nCreateTaskForm.propTypes = {\r\n  handleCreateTask: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  userID: PropTypes.number.isRequired,\r\n  responsibleList: PropTypes.array.isRequired,\r\n  userList: PropTypes.object.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CreateTaskForm from './CreateTaskForm'\r\n\r\nclass Tasks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasksList: [],\r\n            view: this.props.view,\r\n            username: this.props.username,\r\n            userID: this.props.userID,\r\n            responsibleList: [],\r\n            refresh: false\r\n        };\r\n        this.statusDict = {\r\n            'TW': 'К выполнению',\r\n            'IP': 'Выполняется',\r\n            'FD': 'Выполнена',\r\n            'CL': 'Отменена'\r\n        };\r\n        this.priorityDict = {\r\n            'LW': 'Низкий',\r\n            'MD': 'Средний',\r\n            'HI': 'Высокий'\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('pewpew');\r\n        fetch('API/tasks/get/', {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                console.log(json);\r\n                this.setState({tasksList: json});\r\n            });\r\n        fetch('API/users/responsible/', {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                if (json.length) {\r\n                const lst = json.map(item => {\r\n                    return {id: item.id, username: item.username, view: true}\r\n                });\r\n                this.setState({responsibleList: lst});\r\n                }\r\n            });\r\n    };\r\n\r\n    handleShowForm = () => {\r\n        return <CreateTaskForm \r\n            username={this.state.username}\r\n            userID={this.state.userID}\r\n            handleCreateTask={this.handleCreateTask}\r\n            responsibleList={this.state.responsibleList}\r\n            userList={this.props.userList}\r\n            />;\r\n    };\r\n\r\n    handleCreateTask = (e, data) => {\r\n        e.preventDefault();\r\n        fetch('API/tasks/create/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(data)\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => console.log(json))\r\n    };\r\n\r\n    handleFormattedDate = () => {\r\n        const date = new Date();\r\n        const year = String(date.getFullYear());\r\n        const month = String(date.getMonth() + 1).padStart(2, 0);\r\n        const day = String(date.getDate()).padStart(2, 0);\r\n        const formattedDate = [year,month,day].join('-');\r\n        return formattedDate;\r\n      };\r\n\r\n    handleResposible = (props) => {\r\n        let responsibleList = [];\r\n        let name;\r\n        props.list.forEach(responsible => {\r\n            if (this.props.userList[responsible]) {\r\n                name = this.props.userList[responsible].fullName;\r\n            } else {\r\n                name = responsible;\r\n            }\r\n            responsibleList.push(<span key={responsible}>{name} </span>); \r\n        });\r\n        return (\r\n            <div>{responsibleList}</div>\r\n        );\r\n    }\r\n\r\n    handleCreateTasksList = anyTasksList => {\r\n        let taskList = anyTasksList.map(task => \r\n            <div key={task.id} id={task.id}>\r\n                <div>{task.title}</div>\r\n                <div>{this.priorityDict[task.priority]}</div>\r\n                <div>{task.expiration_date}</div>\r\n                <this.handleResposible list={task.responsible} />\r\n                <div>{this.statusDict[task.status]}</div>\r\n                <br />\r\n            </div>\r\n        );\r\n        return (\r\n            <div>{taskList}</div>\r\n        );\r\n    }\r\n\r\n    handleShowMyTasks = () => {\r\n        let today = this.handleFormattedDate();\r\n        let week = new Date();\r\n        week.setDate(week.getDate() + 7);\r\n        let todayTasks = [];\r\n        let weekTasks = [];\r\n        let longTasks = [];\r\n        this.state.tasksList.forEach(task => {\r\n            let expDate = new Date(task.expiration_date);\r\n            if (task.responsible.includes(this.state.userID)) {\r\n                if (task.expiration_date === today) {\r\n                    todayTasks.push(task);\r\n                } else if (expDate <= week ) {\r\n                    weekTasks.push(task);\r\n                } else {\r\n                    longTasks.push(task);\r\n                }\r\n            };\r\n        });\r\n\r\n        const todayTasksList = this.handleCreateTasksList(todayTasks);\r\n        const weekTasksList = this.handleCreateTasksList(weekTasks);\r\n        const longTasksList = this.handleCreateTasksList(longTasks);\r\n\r\n        return (            \r\n            <div>\r\n                <span>TODAY</span>\r\n                {todayTasksList}<br />\r\n                <span>WEEK</span>\r\n                {weekTasksList}<br />\r\n                <span>OTHER</span>\r\n                {longTasksList}<br />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleShowMyTeamTasks = () => {\r\n        let taskList = [];\r\n        let myTeamTasksList;\r\n        if (this.state.responsibleList.length) {\r\n            this.state.tasksList.forEach(task => {\r\n                for (let responsible of this.state.responsibleList) {\r\n                    if (task.responsible.includes(responsible.id)) {\r\n                        taskList.push(task);\r\n                        break;\r\n                    };\r\n                };\r\n            });\r\n            if (taskList.length) {\r\n                myTeamTasksList = this.handleCreateTasksList(taskList);\r\n            } else {\r\n                myTeamTasksList = <span>У ваших подчиненных нет текущих задач.</span>\r\n            };\r\n        } else {\r\n            myTeamTasksList = <span>У вас нет подчиненных.</span>;\r\n        };\r\n        \r\n        return (            \r\n            <div>\r\n                {myTeamTasksList}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleShowTasksByResponsible = () => {\r\n        let tasksDict = {};\r\n        this.state.tasksList.forEach(task => {\r\n            task.responsible.forEach(responsible => {\r\n                if (!(responsible in tasksDict)) {\r\n                    tasksDict[responsible] = [];\r\n                };\r\n                tasksDict[responsible].push(task);\r\n                \r\n            });\r\n        });\r\n        let tasksByResponsible = [];\r\n        for (let responsible in tasksDict) {\r\n            let respTasks = this.handleCreateTasksList(tasksDict[responsible])\r\n            tasksByResponsible.push(\r\n                <div key={responsible} id={responsible}>\r\n                    <p>Задачи - {responsible}</p>\r\n                    <div>{respTasks}</div>\r\n                </div>\r\n            );\r\n        };\r\n        return (            \r\n            <div>\r\n                {tasksByResponsible}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleShowAllTasks = () => {\r\n        let taskList = this.handleCreateTasksList(this.state.tasksList)\r\n        return (            \r\n            <div>\r\n                {taskList}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let tasksView;\r\n        switch (this.props.view) {\r\n            case 'my':\r\n                tasksView = this.handleShowMyTasks();\r\n                break;\r\n            case 'myTeam':\r\n                tasksView = this.handleShowMyTeamTasks();\r\n                break;\r\n            case 'all':\r\n                tasksView = this.handleShowAllTasks();\r\n                break;\r\n            case 'allByResponsible':\r\n                tasksView = this.handleShowTasksByResponsible();\r\n                break;\r\n            case 'createForm':\r\n                tasksView = this.handleShowForm();\r\n                break;\r\n            default:\r\n                tasksView = null;\r\n        };\r\n        return (\r\n            <div>\r\n                <p>Tasks</p><br />\r\n                <div>{tasksView}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Tasks;\r\n\r\nTasks.propTypes = {\r\n    username: PropTypes.string.isRequired,\r\n    userID: PropTypes.number.isRequired,\r\n    view: PropTypes.string.isRequired,\r\n    userList: PropTypes.object.isRequired\r\n  };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tasks from './Tasks';\r\n\r\nclass ToDo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            userID: '',\r\n            view: 'all',\r\n            createTask: false\r\n        };\r\n        this.userList = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('API/users/current/', {\r\n        headers: {\r\n            Authorization: `JWT ${localStorage.getItem('token')}`\r\n        }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({ username: json.username });\r\n            this.setState({ userID: json.id });\r\n        });\r\n        fetch('API/users/get_all/', {\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            }\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                if (json.length) {\r\n                    json.forEach(element => {\r\n                        this.userList[element.id] = {};\r\n                        Object.assign(this.userList[element.id], element);\r\n                        delete this.userList[element.id].id;\r\n                        let firstName = element.first_name ? element.first_name.slice(0,1).toUpperCase() + '.' : '';\r\n                        let patronymic = element.patronymic ? element.patronymic.slice(0,1).toUpperCase() + '.' : '';\r\n                        let init = firstName ? ' ' + firstName + patronymic : '';\r\n                        let fullName = element.last_name + init;\r\n                        this.userList[element.id].fullName = fullName ? fullName : element.username;\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    handleLogout = () => {\r\n        localStorage.removeItem('token');\r\n        this.props.onLoggedInChange(false);\r\n      };\r\n\r\n    handleUserCheck = () => {\r\n        return this.state.username && this.state.userID;\r\n    }\r\n\r\n    handleViewChange = (e) => {\r\n        e.preventDefault();\r\n        this.setState({view: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        let showFormButton;\r\n        let tasks;\r\n        if (this.handleUserCheck()) {\r\n            showFormButton = <button value='createForm' onClick={e => this.handleViewChange(e)}>Создать</button>;\r\n            tasks = <Tasks\r\n                username={this.state.username}\r\n                userID={this.state.userID}\r\n                view={this.state.view}\r\n                userList={this.userList}                    \r\n            /> \r\n        } else {\r\n            showFormButton = false;\r\n            tasks = false;\r\n        };\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <span>{this.state.username}</span>               \r\n                    <button onClick={this.handleLogout}>logout</button>\r\n                    <div>\r\n                        <button value='my' onClick={e => this.handleViewChange(e)}>Мои задачи</button>\r\n                        <button value='myTeam' onClick={e => this.handleViewChange(e)}>Задачи моей команды</button>\r\n                        <button value='all' onClick={e => this.handleViewChange(e)}>Все задачи</button>\r\n                        <button value='allByResponsible' onClick={e => this.handleViewChange(e)}>Задачи по отвественным</button>\r\n                        {showFormButton}\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                {tasks}                           \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDo;\r\n\r\nToDo.propTypes = {\r\n    onLoggedInChange: PropTypes.func.isRequired\r\n  };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n  \r\n  handleInputChange = e => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState(prevstate => {\r\n      const newState = { ...prevstate };\r\n      newState[name] = value;\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={e => this.props.handleLogin(e, this.state)}>\r\n        <h4>Log In</h4>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.username}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={this.state.password}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <input type=\"submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LoginForm from './LoginForm'\r\n\r\nclass Authentication extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginError: null,\r\n        };\r\n    }\r\n\r\n    verifyAuthenticationJSON = json => {\r\n        if (json.token) {\r\n            localStorage.setItem('token', json.token);\r\n            this.props.onLoggedInChange(true);\r\n        } else {\r\n            this.setState({loginError: json.non_field_errors});\r\n        };\r\n    }\r\n\r\n    handleLogin = (e, data) => {\r\n        e.preventDefault();\r\n        if (data.username && data.password) {\r\n            fetch('/token-auth/', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n              })\r\n                .then(res => res.json())\r\n                .then(json => this.verifyAuthenticationJSON(json));\r\n        } else {            \r\n            const error = data.username ? 'empty_password' : 'empty_username';\r\n            this.setState({loginError: error})\r\n        }  \r\n      };\r\n\r\n    render() {\r\n        const errorDict = {\r\n            'invalid_username': 'Пользователя с таким логином не существует',\r\n            'invalid_password': 'Неверный пароль',\r\n            'empty_username': 'Имя пользователя не может быть пустым',\r\n            'empty_password': 'Пароль не может быть пустым'\r\n        };\r\n        return (\r\n            <div>\r\n                <span>{errorDict[this.state.loginError]}</span>\r\n                <LoginForm handleLogin={this.handleLogin} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authentication;\r\n\r\nAuthentication.propTypes = {\r\n    onLoggedInChange: PropTypes.func.isRequired\r\n  };","import React from 'react';\nimport ToDo from './components/ToDo';\nimport Authentication from './components/Authentication'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: localStorage.getItem('token') ? true : false,\n    };\n  }\n\n  handleLoggedInChange = isLoggedIn =>  {\n    this.setState({isLoggedIn: isLoggedIn});\n  }\n\n  render() {\n    let view;\n    if (this.state.isLoggedIn) {\n      view = <ToDo onLoggedInChange={this.handleLoggedInChange} />;\n    } else {\n      view = <Authentication onLoggedInChange={this.handleLoggedInChange} />;\n    }\n    return (\n      view\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}